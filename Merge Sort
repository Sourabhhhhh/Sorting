import java.util.Scanner;

public class merge_sort {
    static void mergesort(int input[], int sI, int eI) {
        if (sI >= eI) {
            return;
        }
        int mid = (sI + eI) / 2;

        //part 1
        mergesort(input, sI, mid);

        //part 2
        mergesort(input, mid + 1, eI);
        merge(input, sI, eI);
    }

    private static void merge(int[] input, int sI, int eI) {
        int mid = (sI + eI) / 2;
        int ans[] = new int[eI - sI + 1];
        int i = sI;
        int j = mid + 1;
        int k = 0;
        while (i <= mid && j <= eI) {
            if (input[i] < input[j]) {
                ans[k] = input[i];
                i++;
                k++;
            } else {
                ans[k] = input[j];

                j++;
                k++;
            }

        }
        while (i <= mid) {
            ans[k] = input[i];
            i++;
            k++;

        }
        while (j <= eI) {
            ans[k] = input[j];
            k++;
            j++;
        }
        for (int index = 0; index < ans.length; index++) {
            input[sI + index] = ans[index];
        }
    }

    public static void main(String[] args) {
        System.out.println("enter the length of array");
        Scanner s = new Scanner(System.in);
        int a = s.nextInt();


        int arr[] = new int[a];
        System.out.println("enter the elements");
        for (int i = 0; i < a; i++) {
            arr[i] = s.nextInt();
        }
        System.out.println("sorted array :");
        mergesort(arr, 0,arr.length-1);
        for (int i= 0;i<arr.length ;i++){
            System.out.print(arr[i]+" ");
        }
    }
}
